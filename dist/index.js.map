{"version":3,"sources":["index.js"],"names":["_nextErrorHandler","fn","data","arrayOfFunctions","e","length","undefined","_next","arrayWithFunctions","restOfFunctions","response","middleware","functionArray","Array","isArray","JSON","stringify","module","exports"],"mappings":";AAmCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA9BA,IAAMA,EAAoB,SAACC,EAAIC,EAAMC,GAC/B,IACFF,EAAGC,EAAMC,GACT,MAAOC,GACDC,IAAAA,EAASF,EAAiBE,OAC7BA,GAAAA,GAAU,EACLD,MAAAA,EAIRD,EAAiBE,EAAO,QAAGC,EAAWF,KAIpCG,EAAQ,SAARA,EAASL,EAAMM,GACcA,IAAAA,EAAAA,EAAAA,GAA1BP,EADmC,EAAA,GAC5BQ,EAD4B,EAAA,MAAA,GAGf,IAA3BA,EAAgBJ,OACZJ,EAAGC,GACHD,EAAGC,EAAM,SAACQ,GAAaH,OAAAA,EAAMG,EAAUD,MAG7C,SAASE,EAAWC,GACf,IAACC,MAAMC,QAAQF,GACgCG,KAAAA,0CAAAA,OAAAA,KAAKC,UAAUJ,IAG1D,OAAA,SAAAV,GAAQF,OAAAA,EAAkBO,EAAOL,EAAMU,IAGhDK,OAAOC,QAAUP","file":"index.js","sourceRoot":"..","sourcesContent":["/*\n *\n * Middleware implementation\n *\n */\nconst _nextErrorHandler = (fn, data, arrayOfFunctions) => {\n  try {\n    fn(data, arrayOfFunctions);\n  } catch (e) {\n    const length = arrayOfFunctions.length;\n    if(length <= 1) {\n      throw e;\n    }\n\n    // Executed last middleware passing the error\n    arrayOfFunctions[length-1](undefined, e);\n  }\n}\n\nconst _next = (data, arrayWithFunctions) => {\n  const [fn, ...restOfFunctions] = arrayWithFunctions;\n\n  restOfFunctions.length === 0\n    ? fn(data) // last middleware does not received 'next' function\n    : fn(data, (response) => _next(response, restOfFunctions))\n};\n\nfunction middleware(functionArray){\n  if(!Array.isArray(functionArray)){\n    throw `expected an Array of functions but got ${JSON.stringify(functionArray)}`;\n  }\n\n  return data => _nextErrorHandler(_next, data, functionArray)\n}\n\nmodule.exports = middleware;\n"]}